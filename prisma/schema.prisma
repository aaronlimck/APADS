// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  STAFF
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  staff     Staff?

  @@index([email])
  @@map("users")
}

model Staff {
  user           User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String     @unique
  department     Department @relation("DepartmentStaff", fields: [departmentName], references: [name])
  departmentName String

  @@index([userId])
}

model Department {
  name  String  @unique
  staff Staff[] @relation("DepartmentStaff")

  @@index([name])
}

model Template {
  id          Int      @id @default(autoincrement())
  userId      String
  createdAt   DateTime @default(now())
  published   Boolean  @default(false)
  name        String
  description String   @default("")
  content     String   @default("[]")

  FormSubmissions FormSubmissions[]
  @@unique([name, userId])
}

// Work in progress for next sprint 
model FormSubmissions {
  id         Int      @id @default(autoincrement())
  //userID    String   //Employee
  // Other relevant fields have to plan
  createdAt  DateTime @default(now())
  templateId Int
  form       Template @relation(fields: [templateId], references: [id])

  content String
}
